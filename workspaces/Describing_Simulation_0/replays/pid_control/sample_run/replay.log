# PID control replay started at 2025-10-16T21:01:17Z

## Start simulation
$ curl -sS -i -X POST http://localhost:3000/simulation/start -H Content-Type:\ application/json --data-binary \{\}
HTTP/1.1 200 OK
content-type: application/json
Date: Thu, 16 Oct 2025 21:01:17 GMT
Connection: keep-alive
Keep-Alive: timeout=5
Content-Length: 60

{"acknowledgement":{"messageId":"msg-5","status":"success"}}

## Check status after start
$ curl -sS http://localhost:3000/status
{"simulation":{"running":true,"tick":0},"evaluation":{"running":false,"tick":0}}

## Sample simulation stream (5s timeout)
$ curl -sS --max-time 5 -N http://localhost:3000/simulation/stream
: stream started at 2025-10-16T21:01:17.265Z

# PID control replay started at 2025-10-16T21:01:51Z

## Start simulation
$ curl -sS -i -X POST http://localhost:3000/simulation/start -H Content-Type:\ application/json --data-binary \{\}
HTTP/1.1 200 OK
content-type: application/json
Date: Thu, 16 Oct 2025 21:01:51 GMT
Connection: keep-alive
Keep-Alive: timeout=5
Content-Length: 60

{"acknowledgement":{"messageId":"msg-6","status":"success"}}

## Check status after start
$ curl -sS http://localhost:3000/status
{"simulation":{"running":true,"tick":0},"evaluation":{"running":false,"tick":0}}

## Sample simulation stream (5s timeout)
$ curl -sS --max-time 5 -N http://localhost:3000/simulation/stream
: stream started at 2025-10-16T21:01:51.373Z


# exit status: 28

## Upload PID control plugin
$ curl -sS -i -X POST http://localhost:3000/codebase/plugin -H Content-Type:\ application/json --data-binary $'{\n  "path": "simulation/systems/PIDControlSystem.js",\n  "content": "export class PIDControlSystem { constructor({kp = 1, ki = 0, kd = 0} = {}) { this.kp = kp; this.ki = ki; this.kd = kd; this.integral = 0; this.prevError = 0; } onInit() {} update() {} onDestroy() {} }"\n}'
HTTP/1.1 201 Created
content-type: application/json
Date: Thu, 16 Oct 2025 21:01:56 GMT
Connection: keep-alive
Keep-Alive: timeout=5
Content-Length: 49

{"path":"simulation/systems/PIDControlSystem.js"}

## Attempt to inject PID system
$ curl -sS -i -X POST http://localhost:3000/simulation/system -H Content-Type:\ application/json --data-binary \{\"id\":\"pid\"\,\"module\":\"simulation/systems/PIDControlSystem.js\"\}
HTTP/1.1 500 Internal Server Error
content-type: application/json
Date: Thu, 16 Oct 2025 21:01:56 GMT
Connection: keep-alive
Keep-Alive: timeout=5
Content-Length: 134

{"acknowledgement":{"messageId":"msg-7","status":"error","error":"No handler registered for message type 'simulation.system.inject'"}}

## Check status after injection attempt
$ curl -sS http://localhost:3000/status
{"simulation":{"running":true,"tick":0},"evaluation":{"running":false,"tick":0}}

## Stop simulation
$ curl -sS -i -X POST http://localhost:3000/simulation/stop -H Content-Type:\ application/json --data-binary \{\}
HTTP/1.1 200 OK
content-type: application/json
Date: Thu, 16 Oct 2025 21:01:56 GMT
Connection: keep-alive
Keep-Alive: timeout=5
Content-Length: 60

{"acknowledgement":{"messageId":"msg-8","status":"success"}}
# Replay finished at 2025-10-16T21:01:56Z
